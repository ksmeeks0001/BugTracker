@model BugTracker.Models.Issue
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" , @cols = "50"} })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 10, 80,  new { @class = "form-control"} )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="custom-select form-control" name="Priority" id="Priority">
                    <option selected="">Priority</option>
                    <option value=1>High</option>
                    <option value=2>Mid</option>
                    <option value=3>Low</option>  
                </select><p></p>
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.ProjectId)
        @Html.HiddenFor(model => model.CreatedById)
        @Html.HiddenFor(model => model.DateCreated)
        @Html.HiddenFor(model => model.DateUpdated)
        @Html.HiddenFor(model => model.Resolved)
        @Html.HiddenFor(model => model.DeveloperAssignedId)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="submit" class="btn btn-secondary" />
            </div>
        </div>
    </div>
}
<script>
        var priorityLevel = @Html.ValueFor(model => model.Priority);
        var priority = document.getElementById("Priority");
        for (var i = 0; i < 4; i++) {
            if (priority.options[i].value == priorityLevel) {
                priority.options[i].selected = true;
            }
        }
</script>